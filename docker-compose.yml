version: '3.9'

services:
  mongo:
    container_name: mongo_container
    image: 'mongo'
    ports:
      - '205.209.110.252:27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - qr-net
    command: --bind_ip_all
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mC7!P#t9sX$1VhL@

  cache:
    container_name: cache_container
    image: redis:latest
    restart: always
    ports:
      - '205.209.110.252:6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass 8fz@LkE#72dWvQ$R 
    volumes:
      - cache:/data
    networks:
      - qr-net

  backend:
    container_name: backend_container
    build: ./backend
    ports:
      - '5000:5000'
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - cache
    environment:
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: 8fz@LkE#72dWvQ$R 
      MONGO_URI: mongodb://root:mC7!P#t9sX$1VhL@@mongo:27017/dowellqrcodegenerator
    networks:
      - qr-net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx:/usr/src/app
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/www.qrcode.uxlivinglab.online/fullchain.pem:/etc/letsencrypt/live/www.qrcode.uxlivinglab.online/fullchain.pem:ro
      - /etc/letsencrypt/live/www.qrcode.uxlivinglab.online/privkey.pem:/etc/letsencrypt/live/www.qrcode.uxlivinglab.online/privkey.pem:ro
    restart: always
    networks:
      - qr-net
    depends_on:
      - backend

volumes:
  mongo-data:
  cache:

networks:
  qr-net:
    driver: bridge
